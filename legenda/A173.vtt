WEBVTT

1
00:00:00.000 --> 00:00:04.671
[MÚSICA] E

2
00:00:04.671 --> 00:00:09.257
aí pessoal, tudo bem?

3
00:00:09.257 --> 00:00:13.400
Nessa aula vamos ver como adicionar
efeitos de partículas no jogo.

4
00:00:13.400 --> 00:00:17.324
Vamos adicionar rasto de estrelinhas
por onde o jogador passar e

5
00:00:17.324 --> 00:00:20.720
efeito de explosão quando o
jogador colidir com o inimigo.

6
00:00:20.720 --> 00:00:25.240
O XCode já disponibiliza alguns
efeitos de efeito de partículas.

7
00:00:25.240 --> 00:00:29.920
Clique com o botão direito na pasta
do seu projeto e selecione New File.

8
00:00:29.920 --> 00:00:36.990
Em iOS, Resource, selecione
SpriteKit Particle File e clique em Next.

9
00:00:36.990 --> 00:00:42.170
Escolha o template Magic e
salve com o nome FairyDust.

10
00:00:42.170 --> 00:00:46.780
O XCode então mostra editor de partículas.

11
00:00:46.780 --> 00:00:51.110
Ao lado direito você pode mudar
todas as configurações que desejar.

12
00:00:51.110 --> 00:00:55.794
Para efeitos de partículas você pode
configurar a textura da partícula,

13
00:00:55.794 --> 00:00:59.089
a velocidade,
posição e ângulo de nascimento,

14
00:00:59.089 --> 00:01:03.162
o tempo de vida de cada partícula,
transparência, cor,

15
00:01:03.162 --> 00:01:08.830
tamanho e pode configurar a aleatoriedade
e cada uma dessas propriedades.

16
00:01:08.830 --> 00:01:12.750
Experimente mudar cada uma delas
para ver o efeito em tempo real.

17
00:01:12.750 --> 00:01:17.945
Para esse efeito, mude o nome
para FairyDust, escolha a textura

18
00:01:17.945 --> 00:01:22.380
Star Particle, que disponibilizamos
no artigo ZIP deste módulo,

19
00:01:22.380 --> 00:01:27.180
diminua o tempo de vida
das partículas para 0,5,

20
00:01:27.180 --> 00:01:32.535
[SEM ÁUDIO]

21
00:01:32.535 --> 00:01:37.890
mude a amplitude de posição X e Y para 20

22
00:01:37.890 --> 00:01:45.220
e mude a velocidade de escala para 0.

23
00:01:45.220 --> 00:01:53.614
[SEM ÁUDIO] Agora

24
00:01:53.614 --> 00:01:58.727
vá para o editor de cena, clique e arraste
esse efeito que acabamos de criar.

25
00:01:58.727 --> 00:02:03.516
Esse arquivo criado serve como referência
e todas as modificações que fizermos

26
00:02:03.516 --> 00:02:07.720
nesse efeito importado na cena,
não irão modificar o arquivo original.

27
00:02:07.720 --> 00:02:12.401
Posicione o efeito pouco abaixo
do jogador e selecione o player

28
00:02:12.401 --> 00:02:14.790
node para ser o pai desse efeito.

29
00:02:14.790 --> 00:02:19.390
Assim quando o player node se
movimentar o efeito também se move.

30
00:02:19.390 --> 00:02:27.080
Rode no simulador para ver o que acontece.

31
00:02:27.080 --> 00:02:33.430
Como o nó pai do efeito de
partículas é o player node,

32
00:02:33.430 --> 00:02:38.441
as referência de posição do efeito se
tornam relativas ao pai, mas não é isso

33
00:02:38.441 --> 00:02:44.110
que queremos, queremos que se forme rasto
de particulas por onde o jogador passar.

34
00:02:44.110 --> 00:02:47.422
Para isso mude o target node.

35
00:02:47.422 --> 00:02:51.912
Selecione o SKScene_0 para
que agora a referência

36
00:02:51.912 --> 00:02:55.170
de posição do efeito seja
a cena ao invés do jogador.

37
00:02:55.170 --> 00:02:58.646
Posicione o efeito no
centro do player node.

38
00:02:58.646 --> 00:03:01.120
Vamos mudar a cor da partícula.

39
00:03:01.120 --> 00:03:03.603
Clique no círculo verde com uma seta,

40
00:03:03.603 --> 00:03:07.180
selecione o conta gotas e
clique na cor do alienígena.

41
00:03:07.180 --> 00:03:12.030
Rode no simulador para ver o resultado.

42
00:03:12.030 --> 00:03:18.425
[SEM ÁUDIO] Agora

43
00:03:18.425 --> 00:03:23.790
o efeito cria rasto de partículas
por onde o jogador passa.

44
00:03:23.790 --> 00:03:28.270
Vamos agora criar o efeito de explosão.

45
00:03:28.270 --> 00:03:32.750
Crie novo arquivo de partículas
e escolha template Spark.

46
00:03:32.750 --> 00:03:38.830
Dê o nome de Explosion.

47
00:03:38.830 --> 00:03:44.069
[SEM ÁUDIO] Vamos

48
00:03:44.069 --> 00:03:48.490
modificar pouco esse efeito
para parecer como uma explosão.

49
00:03:48.490 --> 00:03:52.670
Você pode perceber que esse efeito fica
emitindo partículas infinitamente.

50
00:03:52.670 --> 00:03:55.500
Mude o número máximo de
partículas para 500.

51
00:03:55.500 --> 00:04:00.325
Isso significa que apesar da taxa de
nascimento de partículas ser 2000, apenas

52
00:04:00.325 --> 00:04:05.770
500 partículas serão geradas e então o
efeito pára de emitir novas partículas.

53
00:04:05.770 --> 00:04:10.580
Se o número for 0 significa que
infinitas partículas podem ser criadas.

54
00:04:10.580 --> 00:04:15.420
Mude o position range para 5,
tanto no X como no Y.

55
00:04:15.420 --> 00:04:22.153
[SEM ÁUDIO] Mude

56
00:04:22.153 --> 00:04:27.030
o Blend Mode para Alpha.

57
00:04:27.030 --> 00:04:34.308
[SEM ÁUDIO] No

58
00:04:34.308 --> 00:04:38.706
código crie uma função chamada

59
00:04:38.706 --> 00:04:44.319
EmitExplosion que cria uma constante
SKEmitterNode chamada ExplosionNode

60
00:04:44.319 --> 00:04:50.490
passando como argumento o nome do
arquivo de partículas Explosion.sks.

61
00:04:50.490 --> 00:04:55.147
Em seguida a propriedade particlePosition
de explosionNode é definida com

62
00:04:55.147 --> 00:04:57.120
a posição atual do playerNode.

63
00:04:57.120 --> 00:05:03.750
Então o explosionNode é adicionado na cena
pela linha self.addChild(explosionNode).

64
00:05:03.750 --> 00:05:08.310
E por último não podemos esquecer de
remover explosionNode da cena pois

65
00:05:08.310 --> 00:05:12.459
apesar de não continuar emitindo
partículas ele continua na cena e

66
00:05:12.459 --> 00:05:14.090
ocupa espaço na memória.

67
00:05:14.090 --> 00:05:18.804
A função runAction também pode
ser usada com o argumento

68
00:05:18.804 --> 00:05:24.340
completion que define bloco de código a
ser executado quando a ação se completar.

69
00:05:24.340 --> 00:05:29.142
Aqui usamos uma função
waitForDuration que recebe a duração

70
00:05:29.142 --> 00:05:32.260
em segundos de quanto
tempo deve ser esperado.

71
00:05:32.260 --> 00:05:36.480
Essa linha executa uma ação que
espera 1 segundo e então remove o

72
00:05:36.480 --> 00:05:38.130
explosionNode da cena.

73
00:05:38.130 --> 00:05:44.210
Execute a função EmitExplosion
na função GameOver Rode

74
00:05:44.210 --> 00:05:49.160
no simulador para ver o resultado.

75
00:05:49.160 --> 00:05:56.677
[SEM ÁUDIO] A explosão

76
00:05:56.677 --> 00:06:03.868
está funcionando conforme o esperado
mas ainda temos que corrigir problema.

77
00:06:03.868 --> 00:06:08.440
Você pode perceber que quando o jogador
morre o efeito de partículas continua lá.

78
00:06:08.440 --> 00:06:11.070
Vamos para o código corrigir isso.

79
00:06:11.070 --> 00:06:15.460
Crie uma variável SKEmitterNode
chamada FairyDustNode.

80
00:06:15.460 --> 00:06:20.540
Como o efeito chamado FairyDust
que queremos procurar

81
00:06:20.540 --> 00:06:25.620
é filho do playerNode, temos que usar
a função childNodeWithName em playerNode.

82
00:06:25.620 --> 00:06:30.280
Certifique-se que esta linha fique depois
da variável playerNode ser preenchida.

83
00:06:30.280 --> 00:06:35.118
Na função GameOver mude o número máximo
de partículas a serem emitidas para

84
00:06:35.118 --> 00:06:38.320
1 através da propriedade
numParticlesToEmit.

85
00:06:38.320 --> 00:06:42.616
Assim no momento que essa linha for
executada o emissor irá gerar uma

86
00:06:42.616 --> 00:06:47.140
partícula e vai parar de emitir outras
sem que o emissor seja destruído.

87
00:06:47.140 --> 00:06:50.960
Note que fazer hidden igual
a true não funciona no caso.

88
00:06:50.960 --> 00:06:54.639
Em RestartGame volte
numParticlesToEmit para 0,

89
00:06:54.639 --> 00:06:58.910
para que o emissor volte a gerar
partículas infinitamente.

90
00:06:58.910 --> 00:07:06.910
Rode no simulador.

91
00:07:06.910 --> 00:07:13.939
Com isso terminamos a aula de partículas.

92
00:07:13.939 --> 00:07:19.436
Na próxima aula veremos como lidar
com diferentes tamanhos de tela.

93
00:07:19.436 --> 00:07:20.110
Até lá!