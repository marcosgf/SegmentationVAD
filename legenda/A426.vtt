WEBVTT

1
00:00:00.000 --> 00:00:07.905
[MÚSICA] [MÚSICA]

2
00:00:07.905 --> 00:00:13.080
Olá bem vindo ao curso sobre TDD,
eu sou o Clóvis Fernandes e hoje

3
00:00:13.080 --> 00:00:18.180
iremos falar sobre o ciclo TDD
no Contexto de Casos de Testes.

4
00:00:18.180 --> 00:00:23.018
O TDD tem o seu ciclo que
todos vocês já viram que é o

5
00:00:23.018 --> 00:00:26.263
Red Green Refactor, está certo?

6
00:00:26.263 --> 00:00:30.515
E esse que nós vamos
mostrar é que existem dois.

7
00:00:30.515 --> 00:00:35.931
Que vai fazer o ciclo nos
requisitos e outro que vai

8
00:00:35.931 --> 00:00:41.447
fazer o ciclo nos casos de testes
definidos a partir de cada requisito.

9
00:00:41.447 --> 00:00:46.223
É isso que a gente vai mostrar
na aula de hoje ou seja,

10
00:00:46.223 --> 00:00:54.453
ao final desta aula você terá aprendido
como que funciona esse ciclo interno,

11
00:00:54.453 --> 00:01:00.930
que o TDD consome os casos de teste
relativos a cada dos requisitos.

12
00:01:00.930 --> 00:01:06.534
Como vocês estão vendo aqui
a gente tem o a modelagem

13
00:01:06.534 --> 00:01:11.630
vamos dizer assim ágil, normal que
a gente já tinha mostrado até agora.

14
00:01:11.630 --> 00:01:14.703
A gente está vendo o ciclo
TDD aqui do lado está certo?

15
00:01:14.703 --> 00:01:19.539
Mas normalmente quando eu vou começar
a modelagem ágil eu fiz EDUF.

16
00:01:19.539 --> 00:01:25.110
EDUF é projeto suficiente,
não é, está certo?

17
00:01:25.110 --> 00:01:28.370
Antes de começar a fazer a modelagem ágil.

18
00:01:28.370 --> 00:01:33.220
Com isso eu ao começar
a modelagem ágil eu tenho

19
00:01:33.220 --> 00:01:38.002
mais informações para poder fazer
bom projeto ou seja, eu posso,

20
00:01:38.002 --> 00:01:43.257
eu vou ter os requisitos,
eu vou ter conjunto de eventuais

21
00:01:43.257 --> 00:01:47.650
classes que são, através dos cartões CRC,

22
00:01:47.650 --> 00:01:52.630
eu vou ter alguma arquitetura,
alguma informação adicional, está certo?

23
00:01:52.630 --> 00:01:56.798
Então com base nos requisitos,
se eu estou usando

24
00:01:56.798 --> 00:02:01.808
a modelagem CRC os meus requisitos
vão ser responsabilidades.

25
00:02:01.808 --> 00:02:05.270
Então eu pego cada requisito,
não é, está certo?

26
00:02:05.270 --> 00:02:10.930
Eu pego cada requisito, eu defino,
obtenho esses requisitos todos.

27
00:02:10.930 --> 00:02:15.727
E eu estou chamando aqui de req1,
req2, req3 reqn.

28
00:02:15.727 --> 00:02:21.640
Estou chamando esses requisitos
simbolicamente desta forma.

29
00:02:21.640 --> 00:02:25.647
Então eu tenho conjunto de
requisitos relativo ao problema,

30
00:02:25.647 --> 00:02:30.920
não precisa ser completo porque a qualquer
momento pode entrar algum novo requisito,

31
00:02:30.920 --> 00:02:33.830
algum requisito pode sair,
esse é o jogo do TDD.

32
00:02:33.830 --> 00:02:36.981
Bom, qual o próximo passo?

33
00:02:36.981 --> 00:02:40.621
Eu seleciono desses requisitos.

34
00:02:40.621 --> 00:02:45.348
Eu como desenvolvedor estou
livre de escolher qual

35
00:02:45.348 --> 00:02:48.710
requisito eu desejo, está certo?

36
00:02:48.710 --> 00:02:53.691
Eu estou livre para isso,
mas aqui no nosso exemplo eu

37
00:02:53.691 --> 00:02:58.012
vou estar supondo que estou pegando
o requisito req1, está certo,

38
00:02:58.012 --> 00:03:01.470
estou supondo que estou
pegando o requisito req1.

39
00:03:01.470 --> 00:03:06.350
Ao selecionar, bom,
vamos fazer uma suposição geral.

40
00:03:06.350 --> 00:03:11.578
Se eu estou trabalhando
com sistema pequeno,

41
00:03:11.578 --> 00:03:16.484
eu levanto os requisitos possíveis,
e posso também já

42
00:03:16.484 --> 00:03:21.272
definir os casos de testes
para todos os requisitos.

43
00:03:21.272 --> 00:03:25.510
Projeto grande pode ser que isso não,
vai levar muito tempo,

44
00:03:25.510 --> 00:03:28.451
então eu posso deixar para
que quando eu seleciono

45
00:03:28.451 --> 00:03:33.360
o requisito nessa hora eu defino
os casos de testes correspondente.

46
00:03:33.360 --> 00:03:37.737
Também sem a intenção de ser completo
tento ser o máximo completo,

47
00:03:37.737 --> 00:03:40.056
mas ideia é fazer isso aqui rapidamente.

48
00:03:40.056 --> 00:03:42.520
E é o que eu estou mostrando aí,
está certo?

49
00:03:42.520 --> 00:03:46.070
Eu estou mostrando aí que para o req1,

50
00:03:46.070 --> 00:03:50.436
eu vou ter o caso de teste ct1 o ct2,

51
00:03:50.436 --> 00:03:55.100
o ct3 e assim diante até o ctk,
está certo?

52
00:03:55.100 --> 00:03:58.067
O próximo,
a próxima etapa é selecionar deles.

53
00:03:58.067 --> 00:04:02.690
Eu também estou livre de escolher qual o
caso teste eu queira usar, está certo?

54
00:04:02.690 --> 00:04:06.304
Como nós mostramos lá anteriormente,

55
00:04:06.304 --> 00:04:12.250
os casos testes eles são de dois tipos,
não é, normalmente.

56
00:04:12.250 --> 00:04:17.435
Eu olho o caminho feliz, está certo,

57
00:04:17.435 --> 00:04:23.682
e olho também o caminho alternativo, ou o
do teste negativo para ver se tem algum,

58
00:04:23.682 --> 00:04:28.560
alguma coisa inválida,
alguma entrada inválida, está certo?

59
00:04:28.560 --> 00:04:32.934
É isso que eu verifico e aí
pode ser que você naquele dado

60
00:04:32.934 --> 00:04:36.305
momento queira por exemplo testar
os dados inválidos primeiro.

61
00:04:36.305 --> 00:04:38.790
Como eu estou pondo aqui simbolicamente,

62
00:04:38.790 --> 00:04:43.480
esses casos inválidos podem estar
no começo e você vai pegar qualquer

63
00:04:43.480 --> 00:04:46.862
desses dados,
você que escolhe qual que você quer usar.

64
00:04:46.862 --> 00:04:47.637
Está certo?

65
00:04:47.637 --> 00:04:50.040
Você pode usar válido, inválido.

66
00:04:50.040 --> 00:04:54.904
e assim por diante, que vai usar dados
de entrada válidos ou dados de entrada

67
00:04:54.904 --> 00:04:57.537
inválidos, não tem problema.

68
00:04:57.537 --> 00:05:02.932
Bom, selecionei e aí sim eu
entro no ciclo TDD que era,

69
00:05:02.932 --> 00:05:07.638
escreva teste para o caso
de teste correspondente.

70
00:05:07.638 --> 00:05:08.720
Está certo?

71
00:05:08.720 --> 00:05:12.539
Ou seja, eu vou escrever teste para
o JUnit com a intenção de fazê-lo

72
00:05:12.539 --> 00:05:16.690
falhar e aí eu experimento e
vejo ele falhar, está certo?

73
00:05:16.690 --> 00:05:20.489
Algumas vezes ele pode não falhar,
significa que aquele teste não está

74
00:05:20.489 --> 00:05:26.330
agregando nenhuma informação adicional ao
meu desenvolvimento, ao meu projeto aqui.

75
00:05:26.330 --> 00:05:31.020
Bom, ele falhou agora eu vou me
preocupar construir código de

76
00:05:31.020 --> 00:05:35.941
produção que faça esse caso
teste funcionar, está certo?

77
00:05:35.941 --> 00:05:40.703
E eu faço o seguinte que eu vou
então testar agora esse código

78
00:05:40.703 --> 00:05:45.050
novo de produção que eu fiz,
para que esse teste funcione.

79
00:05:45.050 --> 00:05:48.960
Enquanto ele não funcionar
eu vou mexendo nele alí.

80
00:05:48.960 --> 00:05:50.713
Até o momento que funcionou.

81
00:05:50.713 --> 00:05:51.485
Funcionou?

82
00:05:51.485 --> 00:05:52.050
Beleza!

83
00:05:52.050 --> 00:05:57.170
Aí eu vou à terceira parte do
ciclo TDD que é refatorar.

84
00:05:57.170 --> 00:05:58.674
No comecinho,

85
00:05:58.674 --> 00:06:04.370
ou algumas vezes você faz esse ciclo e
não precisa refatorar nada, está certo?

86
00:06:04.370 --> 00:06:08.165
Bom, de qualquer maneira, suponha que você
tenha feito a refatoração ou não você

87
00:06:08.165 --> 00:06:13.950
chegou nesse ponto, e vai passar para
escrever o novo teste, não é, está certo?

88
00:06:13.950 --> 00:06:19.365
Para escrever o novo teste, opa,
eu não posso entrar lá direto,

89
00:06:19.365 --> 00:06:24.554
eu não sei qual é o caso teste para
o novo teste, então eu tenho que

90
00:06:24.554 --> 00:06:29.611
voltar na verdade para esse
meu conjunto de casos testes,

91
00:06:29.611 --> 00:06:34.472
primeira coisa que eu faço
é marcar o ct1 como feito,

92
00:06:34.472 --> 00:06:37.557
done, está feito, está certo?

93
00:06:37.557 --> 00:06:42.636
A segunda coisa é perguntar
se tem mais casos testes.

94
00:06:42.636 --> 00:06:44.370
Tem mais testes?

95
00:06:44.370 --> 00:06:46.815
Sim, tem mais testes.

96
00:06:46.815 --> 00:06:49.390
Então eu vou para o ct2.

97
00:06:49.390 --> 00:06:52.653
Do ct2 eu vou seguir todo o fluxo, não é?

98
00:06:52.653 --> 00:06:58.380
Escrevo teste para ele falhar, escrevo o
código de produção para ele funcionar,

99
00:06:58.380 --> 00:07:03.980
vou para refatorar, pergunto se,
marco ele como done,

100
00:07:03.980 --> 00:07:07.599
pergunto se tem mais casos de
testes e assim por diante.

101
00:07:07.599 --> 00:07:09.993
Vou fazendo isso até chegar no ctk.

102
00:07:09.993 --> 00:07:15.070
Então suponha que eu dei toda
a volta todos eles neste meu ciclo

103
00:07:15.070 --> 00:07:19.876
para cada dos casos testes cheguei no ctk,
no último, não é, está certo?

104
00:07:19.876 --> 00:07:23.021
que eu estava fazendo dos
disponíveis nesse momento,

105
00:07:23.021 --> 00:07:27.746
então passei pela refatoração,
aí marco o ctk como done,

106
00:07:27.746 --> 00:07:33.820
acabei de fazer isso e aí eu pergunto,
tem mais testes?

107
00:07:33.820 --> 00:07:38.626
Se tivesse mais testes, eu voltava
para esse ciclo interno mas eu estou

108
00:07:38.626 --> 00:07:41.868
já supondo que eu fui do ct1 até o ctk.

109
00:07:41.868 --> 00:07:47.093
Então eu varri todos os testes
do requisito 1, do req1.

110
00:07:47.093 --> 00:07:52.770
Então a resposta é não,
se é não o que que eu tenho que fazer?

111
00:07:52.770 --> 00:07:59.518
Marcar o requisito req1 como done e
é o que eu faço, marco ele como done.

112
00:07:59.518 --> 00:08:00.490
E depois?

113
00:08:00.490 --> 00:08:04.380
O próximo passo, escolher novo requisito.

114
00:08:04.380 --> 00:08:09.210
Então o requisito pode
ser por exemplo o req2 ao

115
00:08:09.210 --> 00:08:14.475
escolher os requisitos
nesse fluxo externo,

116
00:08:14.475 --> 00:08:20.260
está certo, eu para cada deles eu vou
definir os requisitos os casos de

117
00:08:20.260 --> 00:08:26.241
testes correspondentes aqueles requisitos
e aí eu faço o ciclo interno do TDD, que

118
00:08:26.241 --> 00:08:31.470
aquele ciclo é ciclo interno relativamente
aos casos testes que eu levantei.

119
00:08:31.470 --> 00:08:35.860
Inclusive eu fico livre, mesmo que eu
tenho marcado lá alguns casos testes,

120
00:08:35.860 --> 00:08:40.055
na hora que eu estou lá fazendo
o ciclo que eu apareça ou surja

121
00:08:40.055 --> 00:08:42.890
novo caso teste que eu não tinha pensado.

122
00:08:42.890 --> 00:08:45.051
Entra no ciclo, está certo?

123
00:08:45.051 --> 00:08:47.644
Não tem problema não, está certo?

124
00:08:47.644 --> 00:08:51.011
Agora quando eu volto e
completei aquele requisito,

125
00:08:51.011 --> 00:08:55.037
eu volto no ciclo externo para começar
a consumir os requisitos eu acabei

126
00:08:55.037 --> 00:09:00.007
consumindo os casos de teste para
cada requisito agora eu vou mudar o

127
00:09:00.007 --> 00:09:05.710
requisito e isso nós veremos
na próxima aula, obrigado.

128
00:09:05.710 --> 00:09:11.080
[MÚSICA]