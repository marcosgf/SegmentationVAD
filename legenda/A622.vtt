WEBVTT

1
00:00:01.710 --> 00:00:04.640
When we perform calculations
with a pen and paper,

2
00:00:04.640 --> 00:00:07.800
we often need to save
intermediate results.

3
00:00:07.800 --> 00:00:10.900
And we may do this with say, scrap paper.

4
00:00:10.900 --> 00:00:15.580
And in this case, the paper is
acting as a form of external memory.

5
00:00:15.580 --> 00:00:19.850
And memory, no matter the form,
takes up physical space.

6
00:00:20.870 --> 00:00:26.450
Computers contain memory, we can think of
it as the scrap paper for the computer.

7
00:00:26.450 --> 00:00:31.479
And say, when you construct an array
to store values in your program,

8
00:00:31.479 --> 00:00:33.022
you require memory.

9
00:00:35.216 --> 00:00:38.275
And at the lowest level,
computers read and

10
00:00:38.275 --> 00:00:42.010
store all instructions
as a string of numbers.

11
00:00:42.010 --> 00:00:44.990
But how do you store numbers in a machine?

12
00:00:44.990 --> 00:00:49.900
This was a very difficult problem
originally, especially when you need

13
00:00:49.900 --> 00:00:54.860
computers to hold their memory
after the access to power is lost.

14
00:00:54.860 --> 00:00:58.480
This is known as nonvolatile memory.

15
00:00:58.480 --> 00:00:59.560
The easiest difference for

16
00:00:59.560 --> 00:01:03.920
a machine to detect is simply a presence
versus an absence of something.

17
00:01:03.920 --> 00:01:06.440
And this is how old
punch cards would work.

18
00:01:06.440 --> 00:01:11.273
Along the top we have some data and
the vertical columns contain

19
00:01:11.273 --> 00:01:15.846
a series of punched holes which
represent each character.

20
00:01:20.386 --> 00:01:24.430
So computers really have two fingers,
base two.

21
00:01:24.430 --> 00:01:29.700
Same as a light switch being on for
one, and off for zero.

22
00:01:29.700 --> 00:01:32.080
This is the smallest
amount of information,

23
00:01:32.080 --> 00:01:34.540
a single difference, which we call a bit.

24
00:01:36.660 --> 00:01:40.050
But bits are powerful for
storage because the amount of unique

25
00:01:40.050 --> 00:01:44.170
states grows exponentially
as we add bits together.

26
00:01:44.170 --> 00:01:49.290
Remember, one light switch is one bit and
it can store two states.

27
00:01:49.290 --> 00:01:53.593
But two light switches can
store four unique states.

28
00:01:56.194 --> 00:02:01.410
And eight light switches, or eight bits,
can store 256 unique states.

29
00:02:03.820 --> 00:02:07.390
And space is measured in bits.

30
00:02:07.390 --> 00:02:11.640
But the physical size of a bit
depends on your method of storage.

31
00:02:12.920 --> 00:02:17.547
So how do computers store zeros and
ones internally?

32
00:02:17.547 --> 00:02:23.290
>> Modern data processing systems like
these use thousands of magnetic cores.

33
00:02:24.410 --> 00:02:26.220
What are magnetic cores?

34
00:02:28.300 --> 00:02:33.100
They are tiny rings of nickel alloy or
other magnetic materials.

35
00:02:33.100 --> 00:02:35.880
They have replaced vacuum tubes for

36
00:02:35.880 --> 00:02:39.290
many important functions
in data processing systems.

37
00:02:39.290 --> 00:02:44.305
>> And it allowed computers to store bits
as clockwise versus counterclockwise

38
00:02:44.305 --> 00:02:49.011
magnetization direction, because
each core could be magnetized in two

39
00:02:49.011 --> 00:02:53.503
different ways depending which
direction the current was applied.

40
00:03:07.784 --> 00:03:12.893
>> Because a bit can be represented
by any bi-stable device and

41
00:03:12.893 --> 00:03:16.310
a magnetic core is a bi-stable device.

42
00:03:17.390 --> 00:03:21.962
>> Later on, this was done
using thin film magnetic discs.

43
00:03:21.962 --> 00:03:26.650
Where we can think of each
bit as a tiny magnetic cell

44
00:03:26.650 --> 00:03:30.660
which can be charged to store
either a one or a zero.

45
00:03:30.660 --> 00:03:32.120
So long story short,

46
00:03:32.120 --> 00:03:37.470
the size of a bit has been rapidly
shrinking since the days of punch cards.

47
00:03:37.470 --> 00:03:40.050
A hard drive in a modern computer

48
00:03:40.050 --> 00:03:44.810
can be thought of as billions
of tiny magnetic cells.

49
00:03:44.810 --> 00:03:49.640
Now you may wonder, well how small
can these little magnetic cells be,

50
00:03:50.790 --> 00:03:55.300
and current research at IBM is
pushing this to the atomic level.

51
00:03:56.370 --> 00:03:57.309
Where they have shown.