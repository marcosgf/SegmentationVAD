WEBVTT

1
00:00:00.000 --> 00:00:07.820
[MÚSICA]

2
00:00:07.820 --> 00:00:17.321
[MÚSICA] E aí pessoal, tudo bem?

3
00:00:17.321 --> 00:00:20.688
Nessa aula iremos ver como
utilizar picker view.

4
00:00:20.688 --> 00:00:23.610
Criaremos picker view com algumas cores.

5
00:00:23.610 --> 00:00:27.410
Quando uma delas for selecionada,
alteramos a cor de fundo da tela.

6
00:00:27.410 --> 00:00:31.580
Vamos iniciar criando novo projeto
com a opção Single View Application.

7
00:00:31.580 --> 00:00:35.620
Escolha o nome do projeto e
em Devices deixe Universal.

8
00:00:35.620 --> 00:00:41.009
[SEM_ÁUDIO] Com

9
00:00:41.009 --> 00:00:45.590
o projeto criado, vamos a storyboard.

10
00:00:45.590 --> 00:00:49.630
Adicione uma label

11
00:00:49.630 --> 00:00:55.400
ajuste o tamanho

12
00:00:55.400 --> 00:01:00.610
e cor e mude para
Selecione a Cor de Fundo.

13
00:01:00.610 --> 00:01:10.002
[SEM_ÁUDIO] Agora

14
00:01:10.002 --> 00:01:16.460
adicione picker view.

15
00:01:16.460 --> 00:01:22.009
[SEM_ÁUDIO] No

16
00:01:22.009 --> 00:01:27.200
inspetor de atributos apenas
modifique o valor de alfa para 0.9.

17
00:01:27.200 --> 00:01:33.250
Dessa forma, adicionamos pouco de
transparência ao plano de fundo do

18
00:01:33.250 --> 00:01:37.480
picker view, permitindo ver que alteramos
a cor de fundo atrás dele também.

19
00:01:37.480 --> 00:01:42.060
Agora vamos adicionar algumas
constraints para poder executar tanto

20
00:01:42.060 --> 00:01:43.620
em iPhone como em iPad.

21
00:01:43.620 --> 00:01:50.890
Vou alinhar no centro horizontal a label
e deixar espaço de 20 pixels do topo.

22
00:01:50.890 --> 00:01:58.951
[SEM_ÁUDIO] O

23
00:01:58.951 --> 00:02:06.610
picker view, vou alinhar ao centro também.

24
00:02:06.610 --> 00:02:15.302
[SEM_ÁUDIO] Vamos

25
00:02:15.302 --> 00:02:20.890
conetar os outlets.

26
00:02:20.890 --> 00:02:25.266
Uma outlet para picker

27
00:02:25.266 --> 00:02:30.485
view vou chamar de picker view.

28
00:02:30.485 --> 00:02:36.660
Outro outlet para a view de fundo.

29
00:02:36.660 --> 00:02:40.528
Vou chamar de BackgroundView.

30
00:02:40.528 --> 00:02:42.680
Vamos ao código.

31
00:02:42.680 --> 00:02:45.379
Em primeiro lugar vamos adicionar

32
00:02:45.379 --> 00:02:49.480
vetor com os dados que queremos
mostrar no picker view.

33
00:02:49.480 --> 00:02:52.616
Usamos vetor de string com o
nome de cores que vamos usar.

34
00:02:52.616 --> 00:02:57.226
Para conseguirmos trabalhar com o picker
view nesse ViewController precisamos de

35
00:02:57.226 --> 00:02:59.830
Delegate que vimos pouco na aula passada.

36
00:02:59.830 --> 00:03:04.230
Então adicione UIPickerViewDelegate.

37
00:03:04.230 --> 00:03:07.680
Além disso,
precisamos também de Data Source,

38
00:03:07.680 --> 00:03:12.270
que é onde encontramos os dados
para popular o picker view.

39
00:03:12.270 --> 00:03:17.118
Para isso adicionamos
UIPickerViewDataSource pois

40
00:03:17.118 --> 00:03:21.188
nesse view controller que iremos ter os
dados do picker view e para que nesse

41
00:03:21.188 --> 00:03:23.330
ponto o código começa a cruzar erro.

42
00:03:23.330 --> 00:03:27.472
Isso ocorre pois adicionamos
o picker view data source.

43
00:03:27.472 --> 00:03:32.263
O delegate não exige funções mas o
data source do picker view exige duas

44
00:03:32.263 --> 00:03:34.560
funções que já iremos adicionar.

45
00:03:34.560 --> 00:03:35.245
Pronto.

46
00:03:35.245 --> 00:03:40.215
Com essas duas funções já satisfazemos
os protocolos para utilizar o

47
00:03:40.215 --> 00:03:42.110
picker view data source.

48
00:03:42.110 --> 00:03:47.270
A primeira função informa quantas colunas
de elementos o picker view irá conter.

49
00:03:47.270 --> 00:03:51.690
A segunda função informa quantos elementos
cada coluna do picker view contem.

50
00:03:51.690 --> 00:03:56.444
Essa informação obtemos do número de
valores contidos no vetor de dados que

51
00:03:56.444 --> 00:03:57.280
inserimos.

52
00:03:57.280 --> 00:03:59.377
Vamos voltar ao viewDidLoad.

53
00:03:59.377 --> 00:04:04.790
Aqui adicionamos o view controller como
delegate e data source do picker view.

54
00:04:04.790 --> 00:04:11.920
Agora vamos incluir algumas
funções auxiliares do picker view.

55
00:04:11.920 --> 00:04:16.712
Nessa primeira função utilizamos o vetor
de dados para informar o que deve aparecer

56
00:04:16.712 --> 00:04:19.050
para cada linha e coluna do picker view.

57
00:04:19.050 --> 00:04:24.880
A segunda função usamos quando
vetor do picker view é selecionado.

58
00:04:24.880 --> 00:04:28.784
Sempre que o picker view mudar o
seu valor essa função será chamada.

59
00:04:28.784 --> 00:04:33.030
Como o objetivo desse aplicativo é mudar
a cor de fundo da tela de acordo com a cor

60
00:04:33.030 --> 00:04:36.839
selecionada do picker view
vamos utilizar essa função para

61
00:04:36.839 --> 00:04:41.190
verificar o valor selecionado
e alterarmos a cor de fundo.

62
00:04:41.190 --> 00:04:44.845
Como já adicionamos uma
transparência no picker view,

63
00:04:44.845 --> 00:04:50.288
vamos voltar ao viewDidLoad e adicionar
uma cor de fundo fixa ao picker view.

64
00:04:50.288 --> 00:04:52.210
Deixei aqui como branca.

65
00:04:52.210 --> 00:04:57.680
Vamos executar o aplicativo em
iPhone 6s e ver o que acontece.

66
00:04:57.680 --> 00:05:05.081
[SEM_ÁUDIO] Temos as

67
00:05:05.081 --> 00:05:10.960
cores mudando de acordo com a opção
selecionada do picker view.

68
00:05:10.960 --> 00:05:16.560
Agora vamos executar em iPad Air 2.

69
00:05:16.560 --> 00:05:24.560
[SEM_ÁUDIO]

70
00:05:24.560 --> 00:05:32.091
[SEM_ÁUDIO] Na

71
00:05:32.091 --> 00:05:39.038
próxima aula você vai ver
coo utilizar date picker.

72
00:05:39.038 --> 00:05:39.730
Até lá!