WEBVTT

1
00:00:00.000 --> 00:00:04.739
[MÚSICA] E

2
00:00:04.739 --> 00:00:09.241
aí pessoal, tudo bem?

3
00:00:09.241 --> 00:00:12.770
Nessa aula vamos ver como
adicionar objetos com Física.

4
00:00:12.770 --> 00:00:18.314
Crie novo projeto com template de
game com as configurações Swift,

5
00:00:18.314 --> 00:00:20.330
SpriteKit e Universal.

6
00:00:20.330 --> 00:00:29.040
[SEM ÁUDIO] Remova a orientação Portrait
pois vamos fazer jogo em modo Paisagem.

7
00:00:29.040 --> 00:00:34.606
[SEM ÁUDIO] No

8
00:00:34.606 --> 00:00:39.710
código remova as linhas de
exemplo deste template.

9
00:00:39.710 --> 00:00:44.013
Faça o download do

10
00:00:44.013 --> 00:00:48.040
arquivo ZIP deste módulo e importe
as imagens da pasta PhysicsPack.

11
00:00:48.040 --> 00:00:55.631
[SEM ÁUDIO] No

12
00:00:55.631 --> 00:01:02.670
editor de cena mude o tamanho
da cena para 1136x640.

13
00:01:02.670 --> 00:01:10.213
[SEM ÁUDIO] Adicione

14
00:01:10.213 --> 00:01:14.800
sprite que será o chão do nosso jogo.

15
00:01:14.800 --> 00:01:18.640
Selecione a textura Grass.

16
00:01:18.640 --> 00:01:24.971
[SEM ÁUDIO] Na

17
00:01:24.971 --> 00:01:30.430
sessão Physics Definition,

18
00:01:30.430 --> 00:01:34.160
Body Type define o formato
do objeto com física.

19
00:01:34.160 --> 00:01:38.982
Pode ser Bounding rectangle,
que considera formato retangular do

20
00:01:38.982 --> 00:01:43.585
tamanho do sprite, Bounding Circle,
que considera formato

21
00:01:43.585 --> 00:01:48.510
circular e Alpha mask que considera
a parte não transparente da imagem.

22
00:01:48.510 --> 00:01:54.010
O ideal é sempre utilizar o formato
mais simples e não abusar do Alpha mask,

23
00:01:54.010 --> 00:01:56.701
pois ele requer mais processamento.

24
00:01:56.701 --> 00:02:02.060
Para o chão selecione Bounding rectangle,
desselecione Allows rotation

25
00:02:02.060 --> 00:02:07.676
para que o chão não rotacione quando
algum objeto colidir e selecione Pinned,

26
00:02:07.676 --> 00:02:11.700
indicando que esse objeto deve
ficar fixo em sua posição.

27
00:02:11.700 --> 00:02:16.959
Adicione novo Color Sprite, modifique

28
00:02:16.959 --> 00:02:23.940
o nome para Ball e selecione
a textura alienYellow_round.

29
00:02:23.940 --> 00:02:28.950
Para Body Type selecione Bounding Circle.

30
00:02:28.950 --> 00:02:35.800
Duplique esse sprite,

31
00:02:35.800 --> 00:02:42.580
selecione a textura elementWood001

32
00:02:42.580 --> 00:02:47.990
e renomeie para Ramp.

33
00:02:47.990 --> 00:02:53.400
e para Body Type selecione Alpha mask.

34
00:02:53.400 --> 00:02:57.530
Desselecione Allows rotation
e selecione Pinned.

35
00:02:57.530 --> 00:03:03.365
[SEM ÁUDIO]

36
00:03:03.365 --> 00:03:09.200
Duplique esse sprite,

37
00:03:09.200 --> 00:03:14.350
rotacione e posicione
do outro lado da cena.

38
00:03:14.350 --> 00:03:19.535
[SEM ÁUDIO] Posicione

39
00:03:19.535 --> 00:03:26.310
a bola em cima de uma das rampas e rode
no simulador para ver o resultado.

40
00:03:26.310 --> 00:03:34.310
[SEM ÁUDIO]

41
00:03:34.310 --> 00:03:43.779
[SEM ÁUDIO] Vamos agora
adicionar interatividade

42
00:03:43.779 --> 00:03:48.480
com a bola, permitindo que o usuário
possa arrastá-la para outra posição.

43
00:03:48.480 --> 00:03:55.200
Em GameScene.swift crie uma variável
SKSpriteNode chamada ballNode,

44
00:03:55.200 --> 00:04:01.210
uma boleana holdingObject com o valor
false e CGPoint chamado touchLocation.

45
00:04:01.210 --> 00:04:08.380
Na função didMoveToView procure o nó com o
nome Ball e atribua a variável ballNode.

46
00:04:08.380 --> 00:04:12.550
Em touchsBegan pegue o
primeiro toque na tela,

47
00:04:12.550 --> 00:04:16.720
a posição desse toque e verifique
se foi tocado em cima de ballNode.

48
00:04:16.720 --> 00:04:20.805
Se essa condição for
verdadeira, atualize a variável

49
00:04:20.805 --> 00:04:25.659
holdingObject para true,
touchLocation com o valor de location,

50
00:04:25.659 --> 00:04:31.555
que é a posição do toque e remova
a ação da gravidade através da linha

51
00:04:31.555 --> 00:04:35.880
ballNode.physicsBody?.affectedByGravity
igual a false.

52
00:04:35.880 --> 00:04:39.180
Zere as velocidades linear e angular.

53
00:04:39.180 --> 00:04:41.123
Na função touchesMoved,

54
00:04:41.123 --> 00:04:46.075
que é chamada quando algum toque muda
de posição, verifique se o objeto

55
00:04:46.075 --> 00:04:50.750
está sendo segurado e atualize a variável
touchLocation com a posição do toque.

56
00:04:50.750 --> 00:04:56.411
Na função touchesEnded que é
chamada quando algum toque termina,

57
00:04:56.411 --> 00:04:59.100
verifique se o objeto está sendo segurado.

58
00:04:59.100 --> 00:05:02.950
Caso seja verdadeiro atualize
holdingObject para false e acione

59
00:05:02.950 --> 00:05:06.454
novamente o efeito da gravidade
na bola através da linha

60
00:05:06.454 --> 00:05:10.870
ballNode.physicsBody?.affectedByGravity
igual a true.

61
00:05:10.870 --> 00:05:15.750
Por fim na função update verifique se
o usuário está segurando a bola pela

62
00:05:15.750 --> 00:05:17.399
variável holdingObject.

63
00:05:17.399 --> 00:05:21.910
Se for verdadeiro atualize a posição de
ballNode com o valor de touchLocation.

64
00:05:21.910 --> 00:05:28.921
Adicione outros objetos
com física na cena,

65
00:05:28.921 --> 00:05:33.400
por exemplo algumas plataformas de
madeira, fixas em suas posições.

66
00:05:33.400 --> 00:05:41.400
[SEM ÁUDIO]

67
00:05:41.400 --> 00:05:49.309
[SEM ÁUDIO] Experimente

68
00:05:49.309 --> 00:05:54.660
deixar uma delas com a opção
Allows rotation ativada.

69
00:05:54.660 --> 00:05:57.850
Rode no simulador para ver o resultado.

70
00:05:57.850 --> 00:06:05.850
[SEM ÁUDIO]

71
00:06:05.850 --> 00:06:14.880
[SEM ÁUDIO] Perceba

72
00:06:14.880 --> 00:06:20.408
que quando o objeto está fixo
em sua posição e aceita rotação,

73
00:06:20.408 --> 00:06:22.980
seu comportamente é similar a uma hélice.

74
00:06:22.980 --> 00:06:29.830
Nessa aula você viu uma introdução
à simulação de física no SpriteKit.

75
00:06:29.830 --> 00:06:34.019
Deixarei no material de apoio link da
página developer.apple.com caso você

76
00:06:34.019 --> 00:06:36.680
queira se aprofundar
pouco mais nesse assunto.

77
00:06:36.680 --> 00:06:42.786
Na próxima aula veremos como
lidar com colisões avançadas.

78
00:06:42.786 --> 00:06:43.630
Até lá!