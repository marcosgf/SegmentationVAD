0
[MÚSICA] E AÍ 
1
PESSOAL TUDO BEM 
2
AGORA QUE TEMOS O SPRITE DO JOGADOR SE MOVIMENTANDO DE ACORDO COM O TOQUE 
3
VAMOS ADICIONAR INIMIGO NA CENA 
4
NO EDITOR DE CENA ADICIONE NOVO COLOR SPRITE 
5
SELECIONE A IMAGEM SUN1 
6
E RENOMEI PARA ENEMY1 REDIMENSIONE PARA TAMANHO PROPORCIONAL AO PLAYER NODE 
7
[SEMÁUDIO] 
8
[SEMÁUDIO] CRIE 
9
UMA VARIÁVEL CHAMADA ENEMY1NODE 
10
DA CLASSE SKSPRITENODE E UMA VARIÁVEL CHAMADA ENEMY1VELOCITY 
11
DA CLASSE CGPOINT QUE SERÁ USADA PARA DETERMINAR A VELOCIDADE DO INIMIGO1 
12
NA FUNÇÃO DIDMOVETOVIEW 
13
USE A FUNÇÃO CHILDNODEWITHNAME PARA ENCONTRAR O NÓ CHAMADO ENEMY1 
14
E INICIALIZE A VELOCIDADE COM CGPOINT X=10 E Y=10 
15
NA FUNÇÃO UPDATE VAMOS 
16
ATUALIZAR A POSIÇÃO X DO INIMIGO1 SOMANDO A SUA 
17
VELOCIDADE X E ATUALIZAR A POSIÇÃO Y SOMANDO A SUA VELOCIDADE Y 
18
VAMOS ADICIONAR CONDIÇÕES PARA QUE O INIMIGO NÃO SAIA DA TELA E 
19
INVERTA SEU MOVIMENTO QUANDO TOCAR EM UMA DAS LATERAIS DA TELA 
20
PRIMEIRO VERIFICAMOS O EIXO X SE A POSIÇÃO X DO INIMIGO FOR 
21
MENOR DO QUE 0 OU MAIOR DO QUE A LARGURA DO FRAME DA CENA 
22
A VELOCIDADE X É INVERTIDA MULTIPLICANDO O VALOR ATUAL POR 1 
23
ASSIM SE A VELOCIDADE X FOR POSITIVO E O INIMIGO TOCAR A PARTE DIREITA DA TELA 
24
SUA VELOCIDADE X FICA NEGATIVA E COMEÇA A SE MOVIMENTAR PARA ESQUERDA 
25
SE TOCAR NA PARTE ESQUERDA DA TELA 
26
SUA VELOCIDADE FICA POSITIVA MOVIMENTANDOSE PARA DIREITA 
27
TAMBÉM AJUSTAMOS A POSIÇÃO DO INIMIGO PARA QUE ELE NÃO SAIA DA TELA 
28
TEMOS QUE FAZER AGORA O MESMO PARA O EIXO Y SE A POSIÇÃO Y DO INIMIGO FOR 
29
MENOR DO QUE ZERO OU MAIOR QUE A ALTURA DO FRAME DA CENA 
30
A VELOCIDADE Y É INVERTIDA MULTIPLICANDO O VALOR ATUAL POR 1 
31
RODE NO SIMULADOR PARA CONFERIR SE O INIMIGO ESTÁ SE MOVIMENTANDO CONFORME O 
32
ESPERADO 
33
[SEMÁUDIO] SE 
34
VOCÊ TIVER IPAD OU IPHONE RODE TAMBÉM NO APARELHO PARA VER A DIFERENÇA DE 
35
VELOCIDADE QUE NO APARELHO SERÁ MAIOR DO QUE NO SIMULADOR 
36
[SEMÁUDIO] TEMOS 
37
QUE FAZER UMA CORREÇÃO DESSA VELOCIDADE DE MOVIMENTAÇÃO 
38
PERCEBA QUE ESTAMOS USANDO A FUNÇÃO UPDATE PARA ATUALIZAR A POSIÇÃO DO INIMIGO 
39
A FUNÇÃO UPDATE É EXECUTADA TODA VEZ ANTES DE CADA QUADRO SER RENDERIZADO 
40
ISSO SIGNIFICA QUE SE TIVERMOS APARELHO QUE RODA NUMA TAXA DE QUADROS POR 
41
SEGUNDO BAIXA A FUNÇÃO UPDATE ESTÁ SENDO EXECUTADA MENOS VEZES A CADA SEGUNDO 
42
QUE APARELHO COM TAXA DE QUADROS SEGUNDO ALTA 
43
ENTÃO O JOGO TERÁ VELOCIDADE DIFERENTE EM CADA MODELO DE APARELHO 
44
TEMOS QUE FAZER CÁLCULO DE CORREÇÃO PARA QUE O JOGO RODE NA MESMA VELOCIDADE 
45
EM MODELOS DIFERENTES DO APARELHO INDEPENDENTE DA TAXA DE QUADROS POR 
46
SEGUNDO PRECISAMOS CALCULAR O TEMPO ENTRE UMA ATUALIZAÇÃO E OUTRA ENTÃO 
47
CRIE UMA VARIÁVEL CHAMADA LASTUPDATETIME E INICIALIZE COM 
48
CONSTRUTOR DA CLASE CFTIMEINTERVAL 
49
NA FUNÇÃO UPDATE VAMOS CALCULAR ESSE 
50
INTERVALO DE TEMPO ENTRE AS ATUALIZAÇÕES PELA VARIÁVEL TIMESINCELASTUPDATE 
51
FAZENDO CURRENTTIME QUE RECEBEMOS POR PARÂMETRO DA FUNÇÃO UPDATE 
52
MENOS O VALOR DE LASTUPDATETIME 
53
APÓS O CÁLCULO ATUALIZAMOS O VALOR LASTUPDATETIME COM O VALOR 
54
CURRENTTIME 
55
TIVEMOS QUE ADICIONAR A CONDIÇÃO LASTUPDATETIME 
56
DIFERENTE DE 0 PARA QUE A VARIÁVEL TIMESINCELASTUPDATE SEJA 
57
CALCULADO APENAS DEPOIS QUE A VARIÁVEL LASTUPDATETIME JÁ TENHA VALOR 
58
COM ESTE VALOR PRECISAMOS APENAS MULTIPLICÁLO PELA VELOCIDADE DO INIMIGO 
59
PARA CORRIGIR A TAXA DE ATUALIZAÇÃO 
60
PARA ISSO PRECISAMOS TRANSFORMÁLO PRIMEIRO EM CGFLOAT 
61
COMO O VALOR DESSE INTERVALO É PEQUENO E MULTIPLICAMOS PELA VELOCIDADE 
62
TEMOS QUE MUDAR A ESCALA DA VELOCIDADE 
63
POIS CASO CONTRÁRIO O INIMIGO SE MOVIMENTARÁ BEM DEVAGAR 
64
MUDE A VELOCIDADE X E Y PARA 300 
65
[SEMÁUDIO] RODE NO SIMULADOR PARA VER O RESULTADO 
66
[SEMÁUDIO] E SE TIVER IPHONE OU IPAD RODE NO APARELHO TAMBÉM 
67
VOCÊ VERÁ QUE A VELOCIDADE EM AMBOS SERÁ IGUAL 
68
PORÉM NO APARELHO VOCÊ NOTARÁ QUE O MOVIMENTO É MAIS SUAVE 
69
POIS A TAXA DE QUADROS POR SEGUNDO É MAIOR DO QUE NO SIMULADOR 
70
NA PRÓXIMA AULA IREMOS ADICIONAR AS REGRAS DE FIM DE JOGO ATÉ LÁ